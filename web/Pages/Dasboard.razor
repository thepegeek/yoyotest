@page "/"
@inject web.Services.YoyoTimer YoyoTimer
@inject web.Services.YoyoDataService YoyoDataService

<h3>Dasboard</h3>

<div class="container">
    <div class="row col-lg-8 col-md-8 justify-content-center offset-lg-2 offset-md-2">
        <div class="row justify-content-center">
            <div class="circle">
                @if (Started)
                {
                    <div id="stats">
                        <div class="mt-3">
                            Level 12
                        </div>
                        <div>
                            Shuttle 2
                        </div>
                        <div>
                            @totalTime.ToString(@"mm\:ss")
                        </div>
                    </div>
                }
                else
                {
                    <button id="playButton" class="mt-4 ml-5 oi oi-media-play" @onclick="Start">
                    </button>
                }

                </div>
            </div>
        </div>
        <div class="row mt-4 col-lg-8 col-md-8 justify-content-center offset-lg-2 offset-md-2">
            <div class="col-4">
                <div class="text-center">
                    NEXT SHUTTLE
                </div>
                <div class="text-center">
                    NEXT SHUTTLE
                </div>
            </div>
            <div class="col-4">
                <div class="text-center border-left border-right">
                    TOTAL TIME
                </div>
                <div class="text-center border-left border-right">
                    @totalTime.ToString(@"mm\:ss")
                </div>
            </div>
            <div class="col-4">
                <div class="text-center">
                    TOTAL DISTANCE
                </div>
                <div class="text-center">
                    @accumulatedDistance
                </div>
            </div>
        </div>
    </div>

    @code {
    public bool Started { get; set; } = false;
    private TimeSpan totalTime { get; set; }
    private int accumulatedDistance { get; set; } = 0;

    private void Start()
    {
        YoyoTimer.SetTimer(1000, true);
        YoyoTimer.OnElapsed += async delegate
        {
            await RefreshStats();
        };
        YoyoDataService.Start();
        Started = true;
    }

    private async Task RefreshStats()
    {
        totalTime = totalTime.Add(new TimeSpan(0, 0, 1));
        
        await InvokeAsync(StateHasChanged);
    }

}
